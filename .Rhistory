head(out1[[1]])
out1 <- extract_areas("~/Downloads/160902_locais_votacao_estado.pdf", pages = 2)
areas
out1 <- extract_areas("~/Downloads/160902_locais_votacao_estado.pdf", pages = 2)
areas
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 630.788462)), guess = F)
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 630.788462)), guess = F)
out1[[1]]
head(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 700)), guess = F)
head(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 700)), guess = F, encoding = "latin1")
head(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 700)), guess = F, encoding = "UTF8")
head(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 700)), guess = F, encoding = "Windows-1252")
head(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 700)), guess = F, encoding = "Latin1")
head(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 800)), guess = F)
head(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1150.769231, "right" = 1000)), guess = F)
head(out1[[1]])
tail(out1[[1]])
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 1000, "right" = 1000)), guess = F)
out1
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 500, "right" = 1000)), guess = F)
out1
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 900, "right" = 1000)), guess = F)
out1
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 800, "right" = 1000)), guess = F)
out1
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 850, "right" = 1000)), guess = F)
out1
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 825, "right" = 1000)), guess = F)
out1
out1 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2:10, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 825, "right" = 1000)), guess = F)
out1[[2]]
out1[[9]]
tabela_mg <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 2:215, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 825, "right" = 1000)), guess = F)
tabela_mg[[1]]
library(data.table)
tabelas <- rbindlist(tabela_mg)
tabelas <- do.call(rbind,tabela_mg)
sapply(tabela_mg, ncol)
which(sapply(tabela_mg, ncol) == 10)
tabela_mg[[17]]
tabela_mg[[17]][,3]
tabela_mg[[17]][3,]
which(sapply(tabela_mg, ncol) == 10)
sapply(tabela_mg, ncol)
tabela_mg[[17]][3,]
tabela_mg2 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 18, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 825, "right" = 1000)), guess = F, columns = 7)
tabela_mg2 <- extract_tables("~/Downloads/160902_locais_votacao_estado.pdf",
pages = 18, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 825, "right" = 1000)), guess = F, columns = list(7))
tabela_mg2
tabela_mg2[[1]]
dim(tabela_mg2[[1]])
tabela_mg2[[1]][,1]
save.image(file = "~/Dropbox/Cepesp/secoes-mg.rdata")
load(file = "~/Dropbox/Cepesp/secoes-mg.rdata")
sapply(tabela_mg, ncol)
n_cols <- sapply(tabela_mg, ncol)
n_cols[n_cols != 7]
tab_Prob <- n_cols[n_cols != 7]
tab_prob <- n_cols[n_cols != 7]
tab_prob
tabela_mg[tab_prob[1]]
tabela_mg[tab_prob[1]][-1,]
tabela_mg[tab_prob[1]][-1, ]
tabela_mg[tab_prob[1]]
dim(tabela_mg[tab_prob[1]])
class(tabela_mg[tab_prob[1]])
tabela_mg[tab_prob[1]]
tabela_mg[{tab_prob[1]}]
tabela_mg[[tab_prob[1]]]
tabela_mg[[tab_prob[1]]][-1, ]
data.frame(tabela_mg[[tab_prob[1]]][-1, ])
df <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
names(df)
names(df) <- tabela_mg[[tab_prob[1]]][1, ]
)
names(df)
tab_prob
tabela_mg[[tab_prob[1]]][1, ]
tab_prob[1]
df <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
n_cols
tab_prob <-which(n_cols != 7)
tab_prob
n_cols[tab_prob]
df <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
df
names(df) <- tabela_mg[[tab_prob[1]]][1, ]
head(df)
names(df)
names(df) == ""
View(df)
library(tidyr)
?unite
unite(df, col = "ZONA" = 2:3)
unite(df, col = "ZONA", 2:3)
unite(df, col = "ZONA", c("ZONA", ""))
names(df) <- make.names(tabela_mg[[tab_prob[1]]][1, ])
df <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
View(df)
unite(df, col = "ZONA", c("X2", "X3"))
unite(df, col = "ZONA", c("X2", "X3"), sep = "")
names(df)
df <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
df <- unite(df, col = "ZONA", c("X2", "X3"), sep = "")
names(df)
data.frame(tabela_mg[[tab_prob[1]]][1, ])
make.names(data.frame(tabela_mg[[tab_prob[1]]][1, ]))
make.names(tabela_mg[[tab_prob[1]]][1, ])
make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
names(df) <- make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
df <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
names(df) <- make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
df <- unite(df, col = "ZONA", c("ZONA", "X"), sep = "")
df <- unite(df, col = "ENDERE", c("ENDERE", "X.1", "X.2", "X.3"), sep = "")
df
dim(df)
head(df)
data.frame(tabela_mg[[1]][-1, ])
dim(data.frame(tabela_mg[[1]][-1, ]))
head(data.frame(tabela_mg[[1]][-1, ]))
head(data.frame(tabela_mg[[1]][-1, ])) == ""
head(df)
tab_prob
n_cols[tab_prob]
df_10 <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
names(df_10) <- make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
df_10 <- unite(df_10, col = "ZONA", c("ZONA", "X"), sep = "")
df_10 <- unite(df_10, col = "ENDERE", c("ENDERE", "X.1", "X.2", "X.3"), sep = "")
df <- data.frame(tabela_mg[[tab_prob[2]]][-1, ])
df
names(df) <- make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
names(df) <- make.names(tabela_mg[[tab_prob[2]]][1, ], unique = T)
View(tabela_mg[[tab_prob[3]]][-1, ])
View(tabela_mg[[tab_prob[4]]][-1, ])
View(tabela_mg[[tab_prob54]]][-1, ])
tabela_mg[[tab_prob[1]]]
tabela_mg[[tab_prob[1]]] <- df_10
df <- data.frame(tabela_mg[[tab_prob[2]]][-1, ])
names(df) <- make.names(tabela_mg[[tab_prob[2]]][1, ], unique = T)
df <- unite(df, col = "ZONA", c("ZONA", "X"), sep = "")
df <- unite(df, col = "ENDERE", c("ENDERE", "X.1", "X.2", "X.3"), sep = "")
df <- unite(df, col = "ENDERE", c("ENDERE", "X.1"), sep = "")
tab_prob
load(file = "~/Dropbox/Cepesp/secoes-mg.rdata")
n_cols <- sapply(tabela_mg, ncol)
tab_prob <-which(n_cols != 7)
n_cols[tab_prob]
df_10 <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
names(df_10) <- make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
df_10 <- unite(df_10, col = "ZONA", c("ZONA", "X"), sep = "")
df_10 <- unite(df_10, col = "ENDERE", c("ENDERE", "X.1", "X.2", "X.3"), sep = "")
tabela_mg[[tab_prob[1]]] <- df_10
for(i in 2:4) {
df <- data.frame(tabela_mg[[tab_prob[i]]][-1, ])
names(df) <- make.names(tabela_mg[[tab_prob[i]]][1, ], unique = T)
df <- unite(df, col = "ZONA", c("ZONA", "X"), sep = "")
df <- unite(df, col = "ENDERE", c("ENDERE", "X.1"), sep = "")
tabela_mg[[tab_prob[i]]] <- df
}
sapply(tabela_mg, ncol)
tab_sete <- which(sapply(tabela_mg, ncol) == 7)
tab_sete
i=1
tab_sete[1]
df <- data.frame(tabela_mg[[tab_prob[i]]][-1, ])
df
names(df) <- make.names(tabela_mg[[tab_prob[i]]][1, ], unique = T)
View(df)
data.frame(tabela_mg[[tab_prob[i]]]
tabela_mg[[tab_prob[i]]]
head(tabela_mg[[tab_prob[i]]])
df <- data.frame(tabela_mg[[i]][-1, ])
df
df <- data.frame(tabela_mg[[i]][-1, ])
names(df) <- make.names(tabela_mg[[i]][1, ], unique = T)
View(df)
for(i in tab_sete) {
df <- data.frame(tabela_mg[[i]][-1, ])
names(df) <- make.names(tabela_mg[[i]][1, ], unique = T)
df <- unite(df, col = "ZONA", c("ZONA", "X"), sep = "")
tabela_mg[[tab_prob[i]]] <- df
}
i
load(file = "~/Dropbox/Cepesp/secoes-mg.rdata")
n_cols <- sapply(tabela_mg, ncol)
tab_prob <-which(n_cols != 7)
n_cols[tab_prob]
df_10 <- data.frame(tabela_mg[[tab_prob[1]]][-1, ])
names(df_10) <- make.names(tabela_mg[[tab_prob[1]]][1, ], unique = T)
df_10 <- unite(df_10, col = "ZONA", c("ZONA", "X"), sep = "")
df_10 <- unite(df_10, col = "ENDERE", c("ENDERE", "X.1", "X.2", "X.3"), sep = "")
tabela_mg[[tab_prob[1]]] <- df_10
for(i in 2:4) {
df <- data.frame(tabela_mg[[tab_prob[i]]][-1, ])
names(df) <- make.names(tabela_mg[[tab_prob[i]]][1, ], unique = T)
df <- unite(df, col = "ZONA", c("ZONA", "X"), sep = "")
df <- unite(df, col = "ENDERE", c("ENDERE", "X.1"), sep = "")
tabela_mg[[tab_prob[i]]] <- df
}
sapply(tabela_mg, ncol)
tab_sete <- which(sapply(tabela_mg, ncol) == 7)
for(i in tab_sete) {
df <- data.frame(tabela_mg[[i]][-1, ])
names(df) <- make.names(tabela_mg[[i]][1, ], unique = T)
df <- unite(df, col = "ZONA", c("ZONA", "X"), sep = "")
tabela_mg[[i]] <- df
}
sapply(tabela_mg, ncol)
all(sapply(tabela_mg, ncol) == 6)
head(tabela_mg[[1]])
tabela_secao <- do.call(rbind, tabela_mg)
View(tabela_secao)
tabela_secao[tabela_secao == ""] <- NA
tabela_secao2 <- fill_(names(tabela_secao), .direction = "down")
tabela_secao2 <- fill_(tabela_secao, names(tabela_secao), .direction = "down")
View(tabela_secao2)
is.na(tabela_secao$MUNIC)
which(is.na(tabela_secao$MUNIC))
tabela_secao[c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC))), ]
View(tabela_secao[c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC))), ])
tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
View(tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ])
df_completar <- tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
nrow(df_completar)
seq(1, nrow(df_completar), 2)
xx <- seq(1, nrow(df_completar), 2)
xx[1:5]
xx <- seq(1, nrow(df_completar)/2, 1)
xx[1:5]
xx <- rep(1:nrow(df_completar)/2, each = 2)
xx[1:5]
1:nrow(df_completar)/2
nrow(df_completar)/2
xx <- rep(1:(nrow(df_completar)/2), each = 2)
xx[1:5]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
grupo_linha
df_completar$grupo <- grupo_linha
df_completar$grupo
View(df_completar)
melt(df_completar, "grupo")
?spread
gather(df_completar, "grupo")
df_completar <- gather(df_completar, "grupo")
head(df_completar)
df_completar <- gather(df_completar, "group")
df_completar <- tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
df_completar$grupo <- grupo_linha
gather(df_completar, "group")
df_completar <- tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
df_completar$grupo <- grupo_linha
df_completar <- gather(df_completar, key = "grupo")
head(df_completar)
df_completar <- tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
df_completar$grupo <- grupo_linha
ncol(df_completar)
df_completar <- gather(df_completar, key = 7)
library(reshape2)
df_completar <- tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
df_completar$grupo <- grupo_linha
df_completar <- melt(df_completar, 7)
librayr(dplyr)
library(dplyr)
head(df_completar)
df_completar %>%
group_by(grupo variable) %>%
summarise(valor = toString(value))
df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = toString(value))
paste(x, NA)
paste("x", NA)
df_completar$value
head(df_completar$value)
head(df_completar)
df_completar$value[is.na(df_completar$value)] = ""
df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = toString(value))
xx=df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = toString(value))
table(xx$grupo)
df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = toString(value))
df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = paste(value, collapse = ""))
df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = paste(value, collapse = "")) %>%
dcast(grupo~variable)
df_completar <- df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = paste(value, collapse = "")) %>%
dcast(grupo~variable)
head(df_completar)
df_completar <- df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = paste(value, collapse = "")) %>%
dcast(grupo~variable) %>%
select(-grupo)
df_completar <- tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
df_completar$grupo <- grupo_linha
df_completar <- melt(df_completar, 7)
df_completar <- df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = paste(value, collapse = "")) %>%
dcast(grupo~variable) %>%
select(-grupo)
View(df_completar)
tabela_secao <- do.call(rbind, tabela_mg)
df_completar <- tabela_secao[sort(c(which(is.na(tabela_secao$MUNIC)) - 1, which(is.na(tabela_secao$MUNIC)))), ]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
df_completar$grupo <- grupo_linha
df_completar <- tabela_secao[sort(c(which(tabela_secao$MUNIC == "") - 1, which(tabela_secao$MUNIC == ""))), ]
grupo_linha <- rep(1:(nrow(df_completar)/2), each = 2)
df_completar$grupo <- grupo_linha
df_completar <- melt(df_completar, 7)
df_completar <- df_completar %>%
group_by(grupo, variable) %>%
summarise(valor = paste(value, collapse = "")) %>%
dcast(grupo~variable) %>%
select(-grupo)
View(df_completar)
tabela_full <- rbind(tabela_secao[-rm_linas, ], df_completar)
rm_linas <- sort(c(which(tabela_secao$MUNIC == "") - 1, which(tabela_secao$MUNIC == "")))
tabela_full <- rbind(tabela_secao[-rm_linas, ], df_completar)
View(tabela_full)
59*215
length(rm_linas)
length(rm_linas)/2
nrow(tabela_secao)-1792
head(tabela_full)
View(head(tabela_full))
n_distinct(tabela_full$MUNIC)
n_distinct(tabela_secao$MUNIC)
n_distinct(tabela_secao2$MUNIC)
saveRDS(object = tabela_full, file = "~/Dropbox/Cepesp/tab-endereco-secoes-mg.rds")
tabela_mg <- extract_tables("http://www.justicaeleitoral.jus.br/arquivos/locais-de-votacao-por-zona-e-municipio", pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 825, "right" = 1000)), guess = F)
knitr::opts_chunk$set(echo = TRUE)
library(tabulizer)
tabela_mg <- extract_tables("http://www.justicaeleitoral.jus.br/arquivos/locais-de-votacao-por-zona-e-municipio", pages = 2, area = list(c("top" = 13.076923, "left" = 2.173077, "bottom" = 825, "right" = 1000)), guess = F)
tabela_mg
load("~/Dropbox/iRT/AVALIA-2017/simulacao2.rdata")
bias_tab
bias_tab[2, 1] <- 0.0100972984
bias_tab
rmse
rmse_tab
require(mapsBR)
require(maptools)
require(sp)
data("regUF")
regUF$COD
xx <- unionSpatialPolygons(SpP = regUF, IDs = regUF$COD)
plot(xx)
regUF$NOME
regUF$UF
nrow(regUF)
xx <- unionSpatialPolygons(SpP = regUF, IDs = rep(1, nrow(regUF)))
plot(xx)
data("regRegiao")
xx <- unionSpatialPolygons(SpP = regRegiao, IDs = rep(1, nrow(regRegiao)))
data("regMun")
xx <- unionSpatialPolygons(SpP = regMun, IDs = rep(1, nrow(regMun)))
plot(xx)
data("regUF")
data("regUF")
xx <- unionSpatialPolygons(SpP = regUF, IDs = rep(1, nrow(regUF)))
plot(xx)
dim(regUF)
class(regUF@polygons)
length(regUF@polygons)
(regUF@polygons)
xx <- unionSpatialPolygons(SpP = regUF, IDs = rep(1, nrow(regUF)), avoidGEOS = T)
LETTERS[1:5]
vec <- 1:5
names(vec) <- LETTERS[1:5]
vec
vetor <- sample(LETTERS, 100, replace = T)
vetor
vec[vetor]
vetor
vetor <- sample(LETTERS[1:5], 100, replace = T)
vetor
vec[vetor]
vec
vetor
vec[vetor]
vetor
vec
library(jsonlite)
fromJSON("http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=60&n=10")
fromJSON("http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=60&n=10")
library(jsonlite)
url_teste <- "http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=60&n=10&rm_produto=25"
fromJSON(url_teste)
library(jsonlite)
url_teste <- "http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=60&n=10&rm_produto=25"
fromJSON(url_teste)
url_teste <- "http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=60&n=10&rm_produto=10"
fromJSON(url_teste)
url_teste <- "http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=60&n=10&rm_produto=10"
fromJSON(url_teste)
fromJSON(url_teste)
fromJSON(url_teste)
url_teste <- "http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=10&n=2&rm_produto=50"
fromJSON(url_teste)
url_teste <- "http://localhost:8080/gerar_matriz?cliente=299&loja=1&data_inicial='2016-08-01'&dias=3&n=2&rm_produto=50"
fromJSON(url_teste)
pnorm(0)
pnorm(-2)
pnorm(-1.5)
100*pnorm(-1.5)
136.44*3
library(rvest)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(rvest)
library(tidyverse)
url <- "https://www.springfieldspringfield.co.uk/view_episode_scripts.php?tv-show=game-of-thrones&episode=s01e01"
webpage <- read_html(url)
webpage
webpage %>% html_node(".scrolling-script-container")
script <- webpage %>% html_node(".scrolling-script-container")
full.text <- html_text(script, trim = TRUE)
full.text
glimpse(full.text)
?glimpse
glimpse(mtcars)
baseurl <- "https://www.springfieldspringfield.co.uk/view_episode_scripts.php?tv-show=game-of-thrones&episode="
s <- c(rep(1:6, each = 10), rep(7, 7))
season <- paste0("s0", s)
ep <- c(rep(1:10, 6), 1:7)
episode <- ifelse(ep < 10, paste0("e0", ep), paste0("e", ep))
all.scripts <- NULL
#Only the first 6 seasons
for (i in 1:60) {
url <- paste0(baseurl, season[i], episode[i])
webpage <- read_html(url)
script <- webpage %>% html_node(".scrolling-script-container")
all.scripts[i] <- html_text(script, trim = TRUE)
}
got <- as.data.frame(all.scripts, stringsAsFactors = FALSE)
counter <- paste0(season, episode)
row.names(got) <- counter[1:60]
colnames(got) <- "text"
as.tibble(got)
View(got)
counter
View(got)
library(quanteda)
install.packages("quanteda")
# Aplicação Calibragem de Itens ANA (3º EF)
# 27 itens de Lingua Portuguesa (leitura)
# 54 itens de Matemática
#
# Aplicação Calibragem de Itens Prova Brasil (5º EF)
# 28 itens de Lingua Portuguesa
# 56 itens de Matemática
##-- Pacotes ----
require(crossdes)
#-- Aplicação Calibragem de Itens ANA (3º EF) ----
#+ BIB - Lingua Portuguesa (leitura) ----
#' Itens: 27 novos + 8 ANA
#' Total: 35 itens
#' Blocos: 7 blocos de 5 itens
#' Cadernos: 7
#' Caderno de 15 itens
bib3.lp <- find.BIB(trt = 7, b = 7, k = 3)
isGYD(bib3.lp)
table(bib3.lp)
7*41*3
7*41
readLines("https://portal.unimedbh.com.br/wps/portal/inicio/home/espaco_do_cliente/catalogo/!ut/p/z1/04_Sj9CPykssy0xPLMnMz0vMAfIjo8zifQwMHB2dDB0N_J0tzA08LX08Qkx8Qg1Cw8z1w_EpMAs1148iRr8BDuBoQJx-PAqi8Bsfrh-F1wo3A3QF7iHurgaORk7mHpamwcbu_qb4TQCHASFXFOSGhkYYZHqmOyoqAgA_n05E/dz/d5/L2dBISEvZ0FBIS9nQSEh/p0/IZ7_L00AAB1A0OUL90ILO56VKC0O81=CZ6_L00AAB1A0OC870I9LHT4LU0UV7=LA0=Ejavax.servlet.include.path_info!QCPCatalogoCompletoView.jsp==/#Z7_L00AAB1A0OUL90ILO56VKC0O81")
url_path <- "https://portal.unimedbh.com.br/wps/portal/inicio/home/espaco_do_cliente/catalogo/!ut/p/z1/04_Sj9CPykssy0xPLMnMz0vMAfIjo8zifQwMHB2dDB0N_J0tzA08LX08Qkx8Qg1Cw8z1w_EpMAs1148iRr8BDuBoQJx-PAqi8Bsfrh-F1wo3A3QF7iHurgaORk7mHpamwcbu_qb4TQCHASFXFOSGhkYYZHqmOyoqAgA_n05E/dz/d5/L2dBISEvZ0FBIS9nQSEh/p0/IZ7_L00AAB1A0OUL90ILO56VKC0O81=CZ6_L00AAB1A0OC870I9LHT4LU0UV7=LA0=Ejavax.servlet.include.path_info!QCPCatalogoCompletoView.jsp==/#Z7_L00AAB1A0OUL90ILO56VKC0O81"
require(readr)
setwd("~/Dropbox/gits/lgsilvaesilva-github/lgsilvaesilva.github.io")
